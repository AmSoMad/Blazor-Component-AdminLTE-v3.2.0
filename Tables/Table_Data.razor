@layout MainLayout

<PageTitle>Table-Data</PageTitle>

    <!-- Content Header (Page header) -->
    <section class="content-header">
      <div class="container-fluid">
        <div class="row mb-2">
          <div class="col-sm-6">
            <h1>DataTables</h1>
          </div>
          <div class="col-sm-6">
            <ol class="breadcrumb float-sm-right">
              <li class="breadcrumb-item"><a href="#">Home</a></li>
              <li class="breadcrumb-item active">DataTables</li>
            </ol>
          </div>
        </div>
      </div><!-- /.container-fluid -->
    </section>

        <!-- Main content -->
    <section class="content">
      <div class="container-fluid">
        <div class="row">
          <div class="col-12">
            <div class="card">
              <div class="card-header">
                <h3 class="card-title">DataTable with minimal features & hover style </h3>
              </div>
              <!-- /.card-header -->
              <div class="card-body">
                <table id="tableGrid_ID" class="table table-bordered table-hover">
                  <thead>
                  <tr>
                    <th>No.</th> 
                    <th>PartCode</th>
                    <th>PartClassCode</th>
                    <th>CommodityCode</th>
                    <th>PartName</th>
                    <th>PartSpec</th>
                    <th>Model</th>
                    <th>LogicalWeight</th>
                    <th>ScrapPercent</th>
                    <th>Bin</th>
                    <th>NextCycleCount</th>
                    <th>UnUseFlag</th>
                    <th>StandardCost</th>
                    <th>CurrentCost</th>
                    <th>PartType</th>
                    <th>SafetyQty2</th>
                    <th>ReOrderLevel2</th>
                    <th>StockTypeFlag</th>
                    <th>PackingUnitQuantity</th>
                    <th>LOTQty</th>
                    <th>RoundingFlag</th>
                    <th>MeasureUnit</th>
                    <th>Route</th>
                    <th>Remarks</th>
                    <th>OrderLeadTime</th>
                    <th>OrderCoverPeriod</th>
                    <th>OrderIncrement</th>
                  </tr>
                  </thead>
                  <tbody>
                    @for(int i = 0; i < 100; i++)
                    {
                    <tr>
                        <td>No. [@i.ToString()]</td>
                        <td>PartCode [@i.ToString()]</td>
                        <td>PartClassCode [@i.ToString()]</td>
                        <td>CommodityCode [@i.ToString()]</td>
                        <td>PartName [@i.ToString()]</td>
                        <td>PartSpec [@i.ToString()]</td>
                        <td>Model [@i.ToString()]</td>
                        <td>LogicalWeight [@i.ToString()]</td>
                        <td>ScrapPercent [@i.ToString()]</td>
                        <td>Bin [@i.ToString()]</td>
                        <td>NextCycleCount [@i.ToString()]</td>
                        <td>UnUseFlag [@i.ToString()]</td>
                        <td>StandardCost [@i.ToString()]</td>
                        <td>CurrentCost [@i.ToString()]</td>
                        <td>PartType [@i.ToString()]</td>
                        <td>SafetyQty2 [@i.ToString()]</td>
                        <td>ReOrderLevel2 [@i.ToString()]</td>
                        <td>StockTypeFlag [@i.ToString()]</td>
                        <td>PackingUnitQuantity [@i.ToString()]</td>
                        <td>LOTQty [@i.ToString()]</td>
                        <td>RoundingFlag [@i.ToString()]</td>
                        <td>MeasureUnit [@i.ToString()]</td>
                        <td>Route [@i.ToString()]</td>
                        <td>Remarks [@i.ToString()]</td>
                        <td>OrderLeadTime [@i.ToString()]</td>
                        <td>OrderCoverPeriod [@i.ToString()]</td>
                        <td>OrderIncrement [@i.ToString()]</td>
                    </tr>
                    }
                  </tbody>
                  <tfoot>
                  <tr>
                    <th>No.</th>
                    <th>PartCode</th>
                    <th>PartClassCode</th>
                    <th>CommodityCode</th>
                    <th>PartName</th>
                    <th>PartSpec</th>
                    <th>Model</th>
                    <th>LogicalWeight</th>
                    <th>ScrapPercent</th>
                    <th>Bin</th>
                    <th>NextCycleCount</th>
                    <th>UnUseFlag</th>
                    <th>StandardCost</th>
                    <th>CurrentCost</th>
                    <th>PartType</th>
                    <th>SafetyQty2</th>
                    <th>ReOrderLevel2</th>
                    <th>StockTypeFlag</th>
                    <th>PackingUnitQuantity</th>
                    <th>LOTQty</th>
                    <th>RoundingFlag</th>
                    <th>MeasureUnit</th>
                    <th>Route</th>
                    <th>Remarks</th>
                    <th>OrderLeadTime</th>
                    <th>OrderCoverPeriod</th>
                    <th>OrderIncrement</th>
                  </tr>
                  </tfoot>
                </table>
              </div>
              <!-- /.card-body -->
            </div>
            <!-- /.card -->
          </div>
          <!-- /.col -->
        </div>
        <!-- /.row -->
      </div>
      <!-- /.container-fluid -->
    </section>
    <!-- /.content -->

@code{
    @using System.Threading.Tasks
    @using Grpc.Net.Client
    @using Grpc.Net.Client.Web
    @using CSystem.ProgramProtos
    @using System.Text.Json
    @using System.Text.Json.Serialization
    @using Google.Protobuf
    @using System
    @using System.Text
    @using Newtonsoft.Json
    @using Newtonsoft.Json.Linq
    @using WebMES_Blazor1.Data
    @using System.Data
    @using WebMES_Blazor1.Models
    @using System.Diagnostics.CodeAnalysis
    @using CSystem
    @inject IJSRuntime JS


    protected IJSObjectReference module;


    /// <summary>
    /// 렌더링 후 해당테이블에 관한 JavaScript를 호출 한다.
    /// </summary>
    /// <param name="firstRender"></param>
    /// <returns></returns>
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            module = await JS.InvokeAsync<IJSObjectReference>("import", "../../dist/js/DataTable_Grid.js");
        }
    }


    //
    /// <summary>
    /// 메뉴리스트 요청
    /// Grpc 통신을로 프로그램목록을 가져온다. 
    /// </summary>
    /// <returns></returns>
    private async Task GetData_gRPC()
    {

        await JS.InvokeVoidAsync("console.log","*****************************************");
        //part = CMes.PartProtos.PartClient.GetAll();        

    }

    protected override async Task OnInitializedAsync()
    {
        await GetData_gRPC();
    
    }
}